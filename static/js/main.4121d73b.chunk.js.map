{"version":3,"sources":["components/Header.jsx","assets/musics/Hope.jpg","assets/musics/Hope.mp3","assets/musics/Sunset.jpg","assets/musics/Sunset.mp3","assets/musics/Saeng_You.jpg","assets/musics/Saeng_You.mp3","assets/musics/You.jpg","assets/musics/You.mp3","assets/musics/Ocean_Blue.jpg","assets/musics/Ocean_Blue.mp3","assets/musics/Distraction.jpg","assets/musics/Distraction.mp3","assets/musics/Secret_to_Happiness.jpg","assets/musics/Secret_to_Happiness.mp3","assets/musics/Hey.jpg","assets/musics/Hey.mp3","context.js","components/AllSongsList.js","components/songlist/SongListItem.jsx","components/DraggableScroll.jsx","components/CurrentSong.jsx","components/songlist/SongList.jsx","components/CurrentSongFav.jsx","assets/img/404.png","AppLayout.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","variant","expand","Nav","Link","className","href","Toggle","aria-controls","Collapse","id","to","exact","activeClassName","MyContext","createContext","currentSong","setCurrentSong","songsList","setSongsList","songHandler","setSongHandler","currentTime","setCurrentTime","fullTime","setFullTime","favList","setFavList","currentSongFav","setCurrentSongFav","songHandlerFav","setSongHandlerFav","Context","children","useState","name","singer","uuidv4","cover","Hope_C","address","Hope","favorite","Sunset_C","Sunset","Saeng_You_C","Saeng_You","You_C","You","Ocean_Blue_C","Ocean_Blue","Distraction_C","Distraction","Secret_to_Happiness_C","Secret_to_Happiness","Hey_C","Hey","Provider","value","SongListItem","useContext","path","onClick","currentInfo","filter","item","Card","Img","src","Body","Title","Text","favCurrentInfo","SwiperCore","use","Scrollbar","Navigation","DraggableScroll","width","slidesPerView","spaceBetween","freeMode","grabCursor","navigation","scrollbar","withRouter","time","setToFav","audioRef","goNext","useEffect","a","current","play","pause","setInterval","duration","clearInterval","currentIndex","findIndex","goBack","length","imgRef","useRef","imgBoxRef","style","backgroundImage","size","type","onChange","e","target","min","max","ref","onLoad","imgwidth","height","console","log","map","SongList","removeFromFav","audioRefFav","currentIndexFav","goNextFav","goBackFav","timeFav","onEnded","setSize","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","useWindowSize","t","Math","floor","slice","undefined","newList","newFavorite","P404","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4121d73b.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap';\r\nimport { RiNeteaseCloudMusicLine } from 'react-icons/ri';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = () => {\r\n    return (\r\n        <Navbar variant=\"dark\" expand=\"md\">\r\n            <Nav.Link className=\"navbar-brand pt-0\" href=\"\"><RiNeteaseCloudMusicLine /></Nav.Link>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavLink to=\"/music-player-web-app\" exact activeClassName=\"active\" className=\"nav-link\">All songs</NavLink>\r\n                    <NavLink to=\"/fav\" className=\"nav-link\">Favorite songs</NavLink>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/Hope.833ba834.jpg\";","export default __webpack_public_path__ + \"static/media/Hope.55385ce8.mp3\";","export default __webpack_public_path__ + \"static/media/Sunset.d8d7b1bb.jpg\";","export default __webpack_public_path__ + \"static/media/Sunset.a5612ae9.mp3\";","export default __webpack_public_path__ + \"static/media/Saeng_You.40471fc9.jpg\";","export default __webpack_public_path__ + \"static/media/Saeng_You.28ecd857.mp3\";","export default __webpack_public_path__ + \"static/media/You.213ddc5f.jpg\";","export default __webpack_public_path__ + \"static/media/You.f13ca7b6.mp3\";","export default __webpack_public_path__ + \"static/media/Ocean_Blue.537e50f0.jpg\";","export default __webpack_public_path__ + \"static/media/Ocean_Blue.95edbca8.mp3\";","export default __webpack_public_path__ + \"static/media/Distraction.6dae191f.jpg\";","export default __webpack_public_path__ + \"static/media/Distraction.4d359759.mp3\";","export default __webpack_public_path__ + \"static/media/Secret_to_Happiness.7bbe26fb.jpg\";","export default __webpack_public_path__ + \"static/media/Secret_to_Happiness.dc1aa566.mp3\";","export default __webpack_public_path__ + \"static/media/Hey.f46f3060.jpg\";","export default __webpack_public_path__ + \"static/media/Hey.b6972ff7.mp3\";","import { createContext, useState } from \"react\";\r\nimport AllSongsList from './components/AllSongsList'\r\nexport const MyContext = createContext({\r\n    currentSong: \"\", setCurrentSong: \"\",\r\n    songsList: \"\", setSongsList: \"\",\r\n    songHandler: \"\", setSongHandler: \"\",\r\n    currentTime: \"\", setCurrentTime: \"\",\r\n    fullTime: \"\", setFullTime: \"\",\r\n    favList: \"\", setFavList: \"\",\r\n    currentSongFav: \"\", setCurrentSongFav: \"\",\r\n    songHandlerFav:\"\", setSongHandlerFav:\"\"\r\n});\r\n\r\nconst Context = ({ children }) => {\r\n    const [songsList, setSongsList] = useState(AllSongsList());\r\n    const [currentSong, setCurrentSong] = useState([{\r\n        name: songsList[0].name,\r\n        singer: songsList[0].singer,\r\n        id: songsList[0].id,\r\n        cover: songsList[0].cover,\r\n        address: songsList[0].address,\r\n        favorite: songsList[0].favorite\r\n    }]);\r\n    const [songHandler, setSongHandler] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState();\r\n    const [fullTime, setFullTime] = useState();\r\n    const [favList, setFavList] = useState([]);\r\n    const [currentSongFav, setCurrentSongFav] = useState([]);\r\n    const [songHandlerFav, setSongHandlerFav] = useState(false)\r\n    return (\r\n        <MyContext.Provider value={{\r\n            currentSong, setCurrentSong,\r\n            songsList, setSongsList,\r\n            songHandler, setSongHandler,\r\n            currentTime, setCurrentTime,\r\n            fullTime, setFullTime,\r\n            favList, setFavList,\r\n            currentSongFav, setCurrentSongFav,\r\n            songHandlerFav, setSongHandlerFav\r\n        }}>\r\n            {children}\r\n        </MyContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default Context;","import { v4 as uuidv4 } from 'uuid';\r\nimport Hope_C from './../assets/musics/Hope.jpg';\r\nimport Hope from './../assets/musics/Hope.mp3';\r\nimport Sunset_C from './../assets/musics/Sunset.jpg';\r\nimport Sunset from './../assets/musics/Sunset.mp3';\r\nimport Saeng_You_C from './../assets/musics/Saeng_You.jpg';\r\nimport Saeng_You from './../assets/musics/Saeng_You.mp3';\r\nimport You_C from './../assets/musics/You.jpg';\r\nimport You from './../assets/musics/You.mp3';\r\nimport Ocean_Blue_C from './../assets/musics/Ocean_Blue.jpg';\r\nimport Ocean_Blue from './../assets/musics/Ocean_Blue.mp3';\r\nimport Distraction_C from './../assets/musics/Distraction.jpg';\r\nimport Distraction from './../assets/musics/Distraction.mp3';\r\nimport Secret_to_Happiness_C from './../assets/musics/Secret_to_Happiness.jpg';\r\nimport Secret_to_Happiness from './../assets/musics/Secret_to_Happiness.mp3';\r\nimport Hey_C from './../assets/musics/Hey.jpg';\r\nimport Hey from './../assets/musics/Hey.mp3';\r\nexport default function AllMusicList() {\r\n    return [\r\n        {\r\n            name:\"Hope\",\r\n            singer:\"Mark Eliyahu\",\r\n            id:uuidv4(),\r\n            cover:Hope_C,\r\n            address:Hope,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n\r\n            name:\"Sunset\",\r\n            singer:\"Waimis\",\r\n            id:uuidv4(),\r\n            cover:Sunset_C,\r\n            address:Sunset,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"Saeng You\",\r\n            singer:\"DayFox\",\r\n            id:uuidv4(),\r\n            cover:Saeng_You_C,\r\n            address:Saeng_You,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"You\",\r\n            singer:\"Approaching Nirvana\",\r\n            id:uuidv4(),\r\n            cover:You_C,\r\n            address:You,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"Ocean Blue\",\r\n            singer:\"InRp\",\r\n            id:uuidv4(),\r\n            cover:Ocean_Blue_C,\r\n            address:Ocean_Blue,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"Distraction\",\r\n            singer:\"Hossein Khezri\",\r\n            id:uuidv4(),\r\n            cover:Distraction_C,\r\n            address:Distraction,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"Secret to Happiness\",\r\n            singer:\"Jayjen\",\r\n            id:uuidv4(),\r\n            cover:Secret_to_Happiness_C,\r\n            address:Secret_to_Happiness,\r\n            favorite:false\r\n        }\r\n        ,\r\n        {\r\n            name:\"Hey\",\r\n            singer:\"Various Artists\",\r\n            id:uuidv4(),\r\n            cover:Hey_C,\r\n            address:Hey,\r\n            favorite:false\r\n        }\r\n    ]\r\n};","import { MyContext } from \"./../../context\";\r\nimport { useContext } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Route, Switch } from \"react-router\";\r\nconst SongListItem = ({ name, cover, singer, id }) => {\r\n    const { setCurrentSong, songsList, setCurrentSongFav, favList } = useContext(MyContext);\r\n\r\n    const updateCurrent = () => {\r\n        let currentInfo = songsList.filter((item) => item.id === id);\r\n        setCurrentSong(currentInfo);\r\n\r\n    };\r\n    const updateCurrentFav = () => {\r\n        let favCurrentInfo = favList.filter((item) => item.id === id);\r\n        setCurrentSongFav(favCurrentInfo);\r\n    };\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <div className=\"songItem mx-3 mb-1\" onClick={updateCurrent}>\r\n                    <Card className=\"songItem_box\">\r\n                        <Card.Img className=\"songItem_box-img w-auto m-2\" src={cover} />\r\n                        <Card.Body className=\"p-1 text-center\">\r\n                            <Card.Title className=\"mb-0\">{name}</Card.Title>\r\n                            <Card.Text>{singer}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Route>\r\n            <Route path=\"/fav\">\r\n                <div className=\"songItem mx-3 mb-1\" onClick={updateCurrentFav}>\r\n                    <Card className=\"songItem_box\">\r\n                        <Card.Img className=\"songItem_box-img w-auto m-2\" src={cover} />\r\n                        <Card.Body className=\"p-1 text-center\">\r\n                            <Card.Title className=\"mb-0\">{name}</Card.Title>\r\n                            <Card.Text>{singer}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Route>\r\n        </Switch>\r\n\r\n    );\r\n}\r\n\r\nexport default SongListItem;","import { Swiper } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/scrollbar/scrollbar.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\n// import Swiper core and required modules\r\nimport SwiperCore, {\r\n    Scrollbar, Navigation\r\n} from 'swiper/core';\r\n// install Swiper modules\r\nSwiperCore.use([Scrollbar, Navigation]);\r\n\r\nconst DraggableScroll = ({ children, width }) => {\r\n    return (\r\n        <>\r\n            {(width >= 576) ?\r\n                <Swiper slidesPerView={1.5} spaceBetween={30} freeMode={true} grabCursor={true} navigation={true} \r\n                scrollbar={{\r\n                    \"hide\": true\r\n                }} className=\"mySwiper\">\r\n                    {children}\r\n                </Swiper>\r\n                :\r\n                <Swiper slidesPerView={2.5} spaceBetween={10} freeMode={true} navigation={true}\r\n                scrollbar={{\r\n                    \"hide\": true\r\n                }} className=\"mySwiper\">\r\n                    {children}\r\n                </Swiper>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DraggableScroll;","import { useContext, useEffect, useRef } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { FaHeart, FaPauseCircle, FaPlay, FaRegHeart, FaStepBackward, FaStepForward } from \"react-icons/fa\";\r\nimport { MyContext } from \"../context\";\r\nimport SongListItem from \"./songlist/SongListItem\";\r\nimport { withRouter } from \"react-router\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport DraggableScroll from \"./DraggableScroll\";\r\n\r\nconst CurrentSong = ({ time, setToFav, width, audioRef, goNext }) => {\r\n    const { currentSong, setCurrentSong, songHandler, setSongHandler, currentTime, setCurrentTime, fullTime, setFullTime, songsList } = useContext(MyContext);\r\n\r\n    useEffect(() => {\r\n        const play = async () => {\r\n            if (songHandler) { await audioRef.current.play(); }\r\n            else { await audioRef.current.pause(); }\r\n        }\r\n        play();\r\n        var time = setInterval(async () => {\r\n            await setCurrentTime(audioRef.current.currentTime);\r\n            await setFullTime(audioRef.current.duration);\r\n        }, 1000)\r\n        return function cleanup() {\r\n            clearInterval(time);\r\n        }\r\n    }, [songHandler, currentSong]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const currentIndex = songsList.findIndex((item) => item.id === currentSong[0].id);\r\n    function goBack() {\r\n        if (currentIndex === 0) {\r\n            setCurrentSong([songsList[songsList.length - 1]]);\r\n        } else { setCurrentSong([songsList[currentIndex - 1]]); }\r\n    }\r\n\r\n\r\n    const imgRef = useRef();\r\n    const imgBoxRef = useRef();\r\n    function setHeight() {\r\n        const imgwidth = imgRef.current.width;\r\n        imgBoxRef.current.height = imgwidth;\r\n        console.log(imgBoxRef.current.height);\r\n        console.log(imgRef.current.height);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {(width > 778) ?\r\n                <div className=\"currentSong\" style={{ backgroundImage: \"linear-gradient(0deg,rgba(35,53,74,0.7),rgba(35,53,74,0.85)), url(\" + currentSong[0].cover + \")\" }}>\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-5 col-xl-3 p-0 d-flex justify-content-end\">\r\n                            <Card className=\"currentSong_box\">\r\n                                <Card.Img className=\"currentSong_box-img mx-auto\" src={currentSong[0].cover} />\r\n                                {(songHandler) ?\r\n                                    <FaPauseCircle onClick={() => setSongHandler(!songHandler)} size=\"4rem\" className=\"currentSong_box-icon\" />\r\n                                    :\r\n                                    <FaPlay onClick={() => setSongHandler(!songHandler)} size=\"4rem\" className=\"currentSong_box-icon\" />\r\n                                }\r\n                                <Card.Body>\r\n                                    <Card.Title>{currentSong[0].name}</Card.Title>\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <Card.Text>{currentSong[0].singer}</Card.Text>\r\n                                        <div className=\"visualizer d-flex align-items-baseline\">\r\n                                            <div className=\"visualizer_icon\"></div>\r\n                                            <div className=\"visualizer_icon2\"></div>\r\n                                            <div className=\"visualizer_icon3\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-7 col-xl-9\">\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"currentSong_caption\">\r\n                                        <div className=\"row justify-content-between w-100 align-items-center\">\r\n                                            <div className=\"col-6 ml-3\">\r\n                                                <h2 className=\"font-weight-bold\">{currentSong[0].name}</h2>\r\n                                                <h4>{currentSong[0].singer}</h4>\r\n                                            </div>\r\n                                            <div className=\"col-5 d-flex flex-column align-items-end mr-xl-auto\">\r\n                                                <div>\r\n                                                    <FaStepBackward onClick={goBack} size=\"2rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                    {(songHandler) ?\r\n                                                        <FaPauseCircle onClick={() => setSongHandler(!songHandler)} size=\"2.5rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                        :\r\n                                                        <FaPlay onClick={() => setSongHandler(!songHandler)} size=\"2.5rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                    }\r\n                                                    <FaStepForward onClick={goNext} size=\"2rem\" className=\"ml-2 currentSong_caption-icon\" />\r\n\r\n                                                </div>\r\n                                                {(currentSong[0].favorite) ?\r\n                                                    <FaHeart onClick={setToFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                                    :\r\n                                                    <FaRegHeart onClick={setToFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"currentSong_time d-flex justify-content-between\">\r\n                                        <span className=\"ml-2\">{time(currentTime)}</span>\r\n                                        <span className=\"mr-2\">{time(fullTime)}</span>\r\n                                    </div>\r\n                                    <div className=\"currentSong_range\">\r\n                                        <div className=\"currentSong_range-slider\">\r\n                                            <div className=\"progress\" style={{ width: (currentTime / fullTime) * 100 + \"%\" }}></div>\r\n                                            <input type=\"range\" onChange={(e) => audioRef.current.currentTime = e.target.value} min=\"0\" max={fullTime} value={currentTime} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                :\r\n                // Start Mobile current song\r\n                <div>\r\n                    <div className=\"currentSongMobile\" style={{ backgroundImage: `linear-gradient(0deg,rgba(35,53,74,0.7),rgba(35,53,74,0.85)), url(${currentSong[0].cover})` }}>\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-11 col-sm-6 p-0 d-flex justify-content-center ml-1\">\r\n                                <Card className=\"currentSongMobile_box\">\r\n                                    <div className=\"currentSongMobile_box-img mx-auto mt-3\" ref={imgBoxRef} onLoad={setHeight}>\r\n                                        <Card.Img className=\"currentSongMobile_box-img-shadow mx-auto\" src={currentSong[0].cover} ref={imgRef} />\r\n                                        <div className=\"currentSongMobile_box-img-icon\">\r\n                                            <FaStepBackward onClick={goBack} size={(width <= 580) ? \"2rem\" : \"3rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                            {(songHandler) ?\r\n                                                <FaPauseCircle onClick={() => setSongHandler(!songHandler)} size={(width <= 600) ? \"2.5rem\" : \"3.5rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                                :\r\n                                                <FaPlay onClick={() => setSongHandler(!songHandler)} size={(width <= 580) ? \"2.5rem\" : \"3.5rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                            }\r\n                                            <FaStepForward onClick={goNext} size={(width <= 580) ? \"2rem\" : \"3rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Card.Body className=\"\">\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <Card.Title className=\"font-weight-bold\">{currentSong[0].name}</Card.Title>\r\n                                            {(currentSong[0].favorite) ?\r\n                                                <FaHeart onClick={setToFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                                :\r\n                                                <FaRegHeart onClick={setToFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <Card.Text>{currentSong[0].singer}</Card.Text>\r\n                                            <div className=\"visualizer d-flex align-items-baseline\">\r\n                                                <div className=\"visualizer_icon\"></div>\r\n                                                <div className=\"visualizer_icon2\"></div>\r\n                                                <div className=\"visualizer_icon3\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"currentSongMobile_time d-flex justify-content-between font-weight-bold\">\r\n                                            <span>{time(currentTime)}</span>\r\n                                            <span>{time(fullTime)}</span>\r\n                                        </div>\r\n                                        <div className=\"currentSongMobile_range\">\r\n                                            <div className=\"currentSongMobile_range-slider\">\r\n                                                <div className=\"progress\" style={{ width: (currentTime / fullTime) * 100 + 1 + \"%\" }}></div>\r\n                                                <input type=\"range\" onChange={(e) => audioRef.current.currentTime = e.target.value} min=\"0\" max={fullTime} value={currentTime} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                            <div className=\"songListMobile col-sm-5 col-11 mx-auto\">\r\n                                <DraggableScroll width={width}>\r\n                                    {songsList.map((item) => (\r\n                                        <SwiperSlide>\r\n                                            <SongListItem key={item.id} name={item.name} singer={item.singer} cover={item.cover} id={item.id} />\r\n                                        </SwiperSlide>\r\n                                    ))}\r\n                                </DraggableScroll>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                // End Mobile current song \r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(CurrentSong);","import { useContext } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { MyContext } from '../../context';\r\nimport SongListItem from './SongListItem';\r\nconst SongList = () => {\r\n    const { songsList, favList } = useContext(MyContext)\r\n    return (\r\n\r\n        <div className=\"row no-gutters\">\r\n            <div className=\"col-7 col-xl-9 offset-5 offset-xl-3\">\r\n                <div className=\"songList mt-2 ml-2 d-flex\">\r\n                    <Switch>\r\n                        <Route path=\"/\" exact>\r\n                            {songsList.map((item) => (\r\n                                <SongListItem key={item.id} name={item.name} singer={item.singer} cover={item.cover} id={item.id} />\r\n                            ))}\r\n                        </Route>\r\n                        <Route path=\"/fav\">\r\n                            {favList.map((item) => (\r\n                                <SongListItem key={item.id} name={item.name} singer={item.singer} cover={item.cover} id={item.id} />\r\n                            ))}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SongList;","import { useContext, useEffect, useRef } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { FaHeart, FaPauseCircle, FaPlay, FaStepBackward, FaStepForward } from \"react-icons/fa\";\r\nimport { MyContext } from \"../context\";\r\nimport SongListItem from \"./songlist/SongListItem\";\r\nimport { withRouter } from \"react-router\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport DraggableScroll from \"./DraggableScroll\";\r\n\r\nconst CurrentSongFav = ({ time, width, removeFromFav }) => {\r\n\r\n    const { currentSongFav, setCurrentSongFav, currentTime, setCurrentTime, fullTime, setFullTime, favList, songHandlerFav, setSongHandlerFav } = useContext(MyContext)\r\n    const audioRefFav = useRef();\r\n    const currentIndexFav = favList.findIndex((item) => item.id === currentSongFav[0].id);\r\n    function goNextFav() {\r\n        if (currentIndexFav === favList.length - 1) {\r\n            setCurrentSongFav([favList[0]]);\r\n        } else { setCurrentSongFav([favList[currentIndexFav + 1]]); }\r\n    }\r\n    function goBackFav() {\r\n        if (currentIndexFav === 0) {\r\n            setCurrentSongFav([favList[favList.length - 1]]);\r\n        } else { setCurrentSongFav([favList[currentIndexFav - 1]]); }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const play = async () => {\r\n            if (songHandlerFav) { await audioRefFav.current.play(); }\r\n            else { await audioRefFav.current.pause(); }\r\n        }\r\n        play();\r\n        var timeFav = setInterval(async () => {\r\n            await setCurrentTime(audioRefFav.current.currentTime);\r\n            await setFullTime(audioRefFav.current.duration);\r\n        }, 1000);\r\n        return function cleanup() {\r\n            clearInterval(timeFav);\r\n        }\r\n    }, [songHandlerFav, currentSongFav]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const imgRef = useRef();\r\n    const imgBoxRef = useRef();\r\n    function setHeight() {\r\n        const imgwidth = imgRef.current.width;\r\n        imgBoxRef.current.height = imgwidth;\r\n        console.log(imgBoxRef.current.height);\r\n        console.log(imgRef.current.height);\r\n    }\r\n    return (\r\n        <>\r\n            <audio\r\n                src={currentSongFav[0].address}\r\n                ref={audioRefFav}\r\n                onEnded={goNextFav}>\r\n            </audio>\r\n            {(width > 778) ?\r\n                <div className=\"currentSong\" style={{ backgroundImage: \"linear-gradient(0deg,rgba(35,53,74,0.7),rgba(35,53,74,0.85)), url(\" + currentSongFav[0].cover + \")\" }}>\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-5 col-xl-3 p-0 d-flex justify-content-end\">\r\n                            <Card className=\"currentSong_box\">\r\n                                <Card.Img className=\"currentSong_box-img mx-auto\" src={currentSongFav[0].cover} />\r\n                                {(songHandlerFav) ?\r\n                                    <FaPauseCircle onClick={() => setSongHandlerFav(!songHandlerFav)} size=\"4rem\" className=\"currentSong_box-icon\" />\r\n                                    :\r\n                                    <FaPlay onClick={() => setSongHandlerFav(!songHandlerFav)} size=\"4rem\" className=\"currentSong_box-icon\" />\r\n                                }\r\n                                <Card.Body>\r\n                                    <Card.Title>{currentSongFav[0].name}</Card.Title>\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <Card.Text>{currentSongFav[0].singer}</Card.Text>\r\n                                        <div className=\"visualizer d-flex align-items-baseline\">\r\n                                            <div className=\"visualizer_icon\"></div>\r\n                                            <div className=\"visualizer_icon2\"></div>\r\n                                            <div className=\"visualizer_icon3\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-7 col-xl-9\">\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"currentSong_caption\">\r\n                                        <div className=\"row justify-content-between w-100 align-items-center\">\r\n                                            <div className=\"col-6 ml-3\">\r\n                                                <h2 className=\"font-weight-bold\">{currentSongFav[0].name}</h2>\r\n                                                <h4>{currentSongFav[0].singer}</h4>\r\n                                            </div>\r\n                                            <div className=\"col-5 d-flex flex-column align-items-end mr-xl-auto\">\r\n                                                <div>\r\n                                                    <FaStepBackward onClick={goBackFav} size=\"2rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                    {(songHandlerFav) ?\r\n                                                        <FaPauseCircle onClick={() => setSongHandlerFav(!songHandlerFav)} size=\"2.5rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                        :\r\n                                                        <FaPlay onClick={() => setSongHandlerFav(!songHandlerFav)} size=\"2.5rem\" className=\"m-2 currentSong_caption-icon\" />\r\n                                                    }\r\n                                                    <FaStepForward onClick={goNextFav} size=\"2rem\" className=\"ml-2 currentSong_caption-icon\" />\r\n\r\n                                                </div>\r\n                                                <FaHeart onClick={removeFromFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"currentSong_time d-flex justify-content-between\">\r\n                                        <span className=\"ml-2\">{time(currentTime)}</span>\r\n                                        <span className=\"mr-2\">{time(fullTime)}</span>\r\n                                    </div>\r\n                                    <div className=\"currentSong_range\">\r\n                                        <div className=\"currentSong_range-slider\">\r\n                                            <div className=\"progress\" style={{ width: (currentTime / fullTime) * 100 + \"%\" }}></div>\r\n                                            <input type=\"range\" onChange={(e) => audioRefFav.current.currentTime = e.target.value} min=\"0\" max={fullTime} value={currentTime} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                :\r\n                // Start Mobile current song fav\r\n                <div>\r\n                    <div className=\"currentSongMobile\" style={{ backgroundImage: \"linear-gradient(0deg,rgba(35,53,74,0.7),rgba(35,53,74,0.85)), url(\" + currentSongFav[0].cover + \")\" }}>\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-11 col-sm-6 p-0 d-flex justify-content-end\">\r\n                                <Card className=\"currentSongMobile_box\">\r\n                                    <div className=\"currentSongMobile_box-img mx-auto mt-3\" ref={imgBoxRef} onLoad={setHeight}>\r\n                                    <Card.Img className=\"currentSongMobile_box-img-shadow mx-auto\" src={currentSongFav[0].cover} ref={imgRef}/>\r\n                                        <div className=\"currentSongMobile_box-img-icon mx-auto\">\r\n                                            <FaStepBackward onClick={goBackFav} size={(width <= 580) ? \"2rem\" : \"3rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                            {(songHandlerFav) ?\r\n                                                <FaPauseCircle onClick={() => setSongHandlerFav(!songHandlerFav)} size={(width <= 600) ? \"2.5rem\" : \"3.5rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                                :\r\n                                                <FaPlay onClick={() => setSongHandlerFav(!songHandlerFav)} size={(width <= 580) ? \"2.5rem\" : \"3.5rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                            }\r\n                                            <FaStepForward onClick={goNextFav} size={(width <= 580) ? \"2rem\" : \"3rem\"} className=\"m-2 currentSong_caption-icon\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Card.Body className=\"\">\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <Card.Title className=\"font-weight-bold\">{currentSongFav[0].name}</Card.Title>\r\n                                            <FaHeart onClick={removeFromFav} size=\"2rem\" className=\"currentSong_caption-icon\" />\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <Card.Text>{currentSongFav[0].singer}</Card.Text>\r\n                                            <div className=\"visualizer d-flex align-items-baseline\">\r\n                                                <div className=\"visualizer_icon\"></div>\r\n                                                <div className=\"visualizer_icon2\"></div>\r\n                                                <div className=\"visualizer_icon3\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"currentSongMobile_time d-flex justify-content-between font-weight-bold\">\r\n                                            <span>{time(currentTime)}</span>\r\n                                            <span>{time(fullTime)}</span>\r\n                                        </div>\r\n                                        <div className=\"currentSongMobile_range\">\r\n                                            <div className=\"currentSongMobile_range-slider\">\r\n                                                <div className=\"progress\" style={{ width: (currentTime / fullTime) * 100 + \"%\" }}></div>\r\n                                                <input type=\"range\" onChange={(e) => audioRefFav.current.currentTime = e.target.value} min=\"0\" max={fullTime} value={currentTime} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                            <div className=\"songListMobile col-11 col-sm-5 ml-3\">\r\n                                <DraggableScroll width={width}>\r\n                                    {favList.map((item) => (\r\n                                        <SwiperSlide>\r\n                                            <SongListItem key={item.id} name={item.name} singer={item.singer} cover={item.cover} id={item.id} />\r\n                                        </SwiperSlide>\r\n                                    ))}\r\n                                </DraggableScroll>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                // End Mobile current song fav\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(CurrentSongFav);","export default __webpack_public_path__ + \"static/media/404.c748044f.png\";","import { useContext, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport './assets/style/index.scss';\r\nimport Header from './components/Header'\r\nimport CurrentSong from './components/CurrentSong';\r\nimport SongList from './components/songlist/SongList'\r\nimport { MyContext } from './context'\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport CurrentSongFav from './components/CurrentSongFav';\r\nimport { FaSadTear } from 'react-icons/fa';\r\nimport P404 from './assets/img/404.png'\r\nfunction AppLayout() {\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n  const [width] = useWindowSize();\r\n\r\n  const { currentSong, setCurrentSong, currentSongFav, songsList, setSongsList, favList, setFavList, setCurrentSongFav } = useContext(MyContext);\r\n\r\n  // start set to fav\r\n  function setToFav() {\r\n    let newList = songsList.map((item) => {\r\n      if (item.id === currentSong[0].id) {\r\n        return {\r\n          ...item,\r\n          favorite: !item.favorite\r\n        }\r\n      } else {\r\n        return {\r\n          ...item\r\n        }\r\n      }\r\n    });\r\n    setSongsList(newList);\r\n    currentSong[0].favorite = !currentSong[0].favorite;\r\n  }\r\n  // end set to fav\r\n\r\n  function removeFromFav() {\r\n    let newFavorite = songsList.map((item) => {\r\n      if (item.id === currentSongFav[0].id) {\r\n        return {\r\n          ...item,\r\n          favorite: !item.favorite\r\n        }\r\n      } else {\r\n        return {\r\n          ...item\r\n        }\r\n      }\r\n    });\r\n    setSongsList(newFavorite);\r\n    setCurrentSong([{\r\n      name: songsList[0].name,\r\n      singer: songsList[0].singer,\r\n      id: songsList[0].id,\r\n      cover: songsList[0].cover,\r\n      address: songsList[0].address,\r\n      favorite: songsList[0].favorite\r\n    }])\r\n\r\n  }\r\n  useEffect(() => {\r\n    const favorite = songsList.filter((item) => item.favorite === true);\r\n    setFavList(favorite);\r\n  }, [songsList])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function time(t) {\r\n    return Math.floor(t / 60) + \":\" + (\"0\" + Math.floor(t % 60)).slice(-2);\r\n  }\r\n  useEffect(() => {\r\n    if (favList[0] !== undefined) {\r\n      setCurrentSongFav([{\r\n        name: favList[0].name,\r\n        singer: favList[0].singer,\r\n        id: favList[0].id,\r\n        cover: favList[0].cover,\r\n        address: favList[0].address,\r\n        favorite: favList[0].favorite\r\n      }])\r\n    } else {\r\n      setCurrentSongFav([]);\r\n    }\r\n  }, [favList])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const audioRef = useRef();\r\n  function goNext() {\r\n    const currentIndex = songsList.findIndex((item) => item.id === currentSong[0].id);\r\n    if (currentIndex === songsList.length - 1) {\r\n      setCurrentSong([songsList[0]]);\r\n    } else { setCurrentSong([songsList[currentIndex + 1]]); }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/music-player-web-app\" exact>\r\n          <audio\r\n            src={currentSong[0].address}\r\n            ref={audioRef}\r\n            onEnded={goNext}\r\n          >\r\n          </audio>\r\n          <CurrentSong time={time} setToFav={setToFav}\r\n            width={width} audioRef={audioRef} goNext={goNext}\r\n          >\r\n          </CurrentSong>\r\n\r\n        </Route>\r\n        <Route path=\"/fav\" exact>\r\n          {(currentSongFav[0] !== undefined) ?\r\n            <CurrentSongFav time={time}\r\n              width={width} removeFromFav={removeFromFav}\r\n            />\r\n            :\r\n            <h1 className=\"fav_message text-center mt-3\">\r\n              There is no favorite song\r\n              <FaSadTear size=\"2rem\" className=\"emoji\" />\r\n            </h1>\r\n          }\r\n        </Route>\r\n        <Route>\r\n          <div className=\"text-center mt-3\">\r\n          <img src={P404} alt=\"page not found\" className=\"img-fluid\"/>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n      {(width <= 778) ? null : <SongList />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(AppLayout);\r\n","import AppLayout from './AppLayout'\r\nimport Context from './context'\r\nconst App = () => {\r\n    return (\r\n        <Context>\r\n            <AppLayout/>\r\n        </Context>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}